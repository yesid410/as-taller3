# TODO: Configurar nginx como proxy reverso
events {
    worker_connections 1024;
}

http {
    upstream webapp {
        # TODO: Configurar upstream para la aplicaci칩n Flask
        server webapp:8000;
    }

    upstream api {
        # TODO: Configurar upstream para la API FastAPI  
        server api:8000;
    }

    server {
        listen 80;
        server_name localhost;

        # TODO: Configurar ubicaciones
        location / {
            # TODO: Proxy hacia la aplicaci칩n web
            proxy_pass http://webapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/ {
            # TODO: Proxy hacia la API
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            rewrite ^/api/(.*)$ /$1 break;
        }
        
        # TODO: Configurar archivos est치ticos
        location /static/ {
            # TODO: Servir archivos est치ticos directamente
            proxy_pass http://webapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # TODO: Configurar logs
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
    }
}
